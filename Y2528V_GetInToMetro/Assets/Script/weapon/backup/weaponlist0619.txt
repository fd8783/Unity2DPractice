using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class weaponlist : MonoBehaviour {

    //** getting some normal info**//
    private Vector3 startpos,curpos,zerovector;
    private Animator anim;
    //*****************************//

    //** showing current weapon info **//
    public GameObject curweapon;
    public Animator curweaponanim;
    //*********************************//

    //** use for melee weapon **//
    private Transform melee, meleehitbox;
    private Transform[] meleelist, meleehitboxlist;
    private Vector3[] meleepos; //save the weapon's orginal position
    private string[] meleename;
    private int meleecount;
    //**************************//

    //** use for changing weapon **//
    private int foundmeleenum;
    private string[] meleeattackmode = { "swing", "stab" };

    // Use this for initialization
    void Awake() {
        anim = transform.root.GetComponent<Animator>();
        zerovector = new Vector3(0f, 0f, 0f);
        startpos = transform.localPosition;
        curpos = startpos;
        melee = transform.Find("melee");
        meleehitbox = transform.Find("meleehitbox");
        meleecount = melee.childCount;
        meleelist = new Transform[meleecount]; meleehitboxlist = new Transform[meleecount]; meleepos = new Vector3[meleecount]; meleename = new string[meleecount];
        for (int i = 0; i < meleecount; i++)
        {
            meleelist[i] = melee.GetChild(i);
            meleepos[i] = meleelist[i].localPosition;
            meleename[i] = meleelist[i].name;
            meleelist[i].localPosition = zerovector;
            meleehitboxlist[i] = meleehitbox.GetChild(i);
        }
	}
	
	// Update is called once per frame
	void Update () {
		
	}

    public bool changeweapon(Transform dropweapon, string type, string attackmode, string weaponname) //use to pick up drop weapon
    {
        Debug.Log(type + " " + attackmode + " " + weaponname);
        if (type == "melee")
        {
            foundmeleenum = -1;
            for (int i = 0; i < meleecount; i++)
            {
                if (meleename[i] == weaponname)
                {
                    foundmeleenum = i;
                    break;
                }
            }
            if (foundmeleenum == -1)
            {
                Debug.Log("this character can't equip this weapon");
                return false;
            }
            else
            {
                changeattackmode(meleeattackmode, attackmode);
                changeweapon(meleelist, weaponname);
                changehitbox(meleehitboxlist, weaponname); // same with chnageweapon(), just use it here for safety
                curpos = startpos + meleepos[foundmeleenum];
            }
        }
        transform.localPosition = curpos;
        return true;
        //Destroy(dropweapon.root.gameObject);
    }

    public void changeweapon(string type, string attackmode, string weaponname)
    {
        Debug.Log(type + " " + attackmode + " " + weaponname);
        if (type == "melee")
        {
            foundmeleenum = -1;
            for (int i = 0; i < meleecount; i++)
            {
                if (meleename[i] == weaponname)
                {
                    foundmeleenum = i;
                    break;
                }
            }
            if (foundmeleenum == -1)
            {
                Debug.Log("this character can't equip this weapon");
            }
            else
            {
                changeattackmode(meleeattackmode, attackmode);
                changeweapon(meleelist, weaponname);
                changehitbox(meleehitboxlist, weaponname); // same with chnageweapon(), just use it here for safety
                curpos = startpos + meleepos[foundmeleenum];
            }
        }
        transform.localPosition = curpos;
        //Destroy(dropweapon.root.gameObject);
    }

    private void changeattackmode(string[] attackmodearr, string modetochange)
    {
        int arrlength = attackmodearr.Length;
        bool changed = false;
        for (int i = 0; i < arrlength; i++)
        {
            if (attackmodearr[i] == modetochange)
            {
                anim.SetBool(modetochange, true);
                changed = true;
            }
            else
            {
                anim.SetBool(attackmodearr[i], false);
            }
        }
        if (!changed)
        {
            Debug.Log("changeattackmode failed!");
        }
    }

    private void changeweapon(Transform[] weaponarr, string weapontochange)
    {
        int arrlength = weaponarr.Length;
        bool changed = false;
        for (int i = 0; i < arrlength; i++)
        {
            if (!changed)
            {
                if (weaponarr[i].name == weapontochange)
                {
                    weaponarr[i].gameObject.SetActive(true);
                    changed = true;
                }
                else
                {
                    weaponarr[i].gameObject.SetActive(false);
                }
            }
            else
            {
                weaponarr[i].gameObject.SetActive(false);
            }
        }
        if (!changed)
        {
            Debug.Log("changeweapon failed!");
        }
    }

    private void changehitbox(Transform[] hitboxarr, string weapontochange) // same with chnageweapon(), just put it here for safety
    {
        int arrlength = hitboxarr.Length;
        bool changed = false;
        for (int i = 0; i < arrlength; i++)
        {
            if (!changed)
            {
                if (hitboxarr[i].name == weapontochange)
                {
                    hitboxarr[i].gameObject.SetActive(true);
                    changed = true;
                }
                else
                {
                    hitboxarr[i].gameObject.SetActive(false);
                }
            }
            else
            {
                hitboxarr[i].gameObject.SetActive(false);
            }
        }
        if (!changed)
        {
            Debug.Log("changeweaponhitbox failed!");
        }
    }

    public void changeweapon(string type, int weanum)
    {
        if (type == "melee")
        {
            curpos = startpos + meleepos[weanum];
        }
        transform.localPosition = curpos;
    }
}
